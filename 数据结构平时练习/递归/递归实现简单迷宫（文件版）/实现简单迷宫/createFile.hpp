/*
功能：实现创建关卡文件
*/
#include <fstream>
//文件名
char* file[3] = {"maze1.txt", "maze2.txt", "maze3.txt"};

//共有三关（1,2两关都有出口，3关没有出口）
const int MAX_ROW_1 = 10;
const int MAX_COL_1 = 10;
char mapArr_1[MAX_ROW_1][MAX_COL_1] = {
	{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
	{ 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
	{ 1, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
	{ 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
	{ 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 },
	{ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } };


//关卡2地图
const int MAX_ROW_2 = 10;
const int MAX_COL_2 = 20;
char mapArr_2[MAX_ROW_2][MAX_COL_2] = {
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
	{ 0, 1, 1, 1, 1, 0, 0, 0, 0, 1 ,1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
	{ 0, 1, 0, 0, 1, 0, 0, 0, 0, 1 ,0, 0, 1, 1, 1, 0, 0, 1, 0, 0 },
	{ 0, 1, 0, 0, 1, 0, 0, 0, 0, 1 ,0, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ,0, 0, 1, 0, 1, 0, 0, 1, 1, 1 },
	{ 0, 0, 1, 1, 1, 0, 0, 0, 1, 1 ,0, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0, 1, 1, 0 ,0, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
	{ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ,0, 0, 1, 0, 1, 1, 1, 1, 1, 0 },
	{ 0, 0, 0, 1, 1, 1, 1, 0, 1, 1 ,1, 1, 1, 0, 1, 1, 0, 1, 0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

//关卡3地图
const int MAX_ROW_3 = 10;
const int MAX_COL_3 = 20;
char mapArr_3[MAX_ROW_3][MAX_COL_3] = {
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
	{ 0, 1, 1, 1, 1, 0, 0, 0, 0, 1 ,1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
	{ 0, 1, 0, 0, 1, 0, 0, 0, 0, 1 ,0, 0, 1, 1, 1, 0, 0, 1, 0, 0 },
	{ 0, 1, 0, 0, 1, 0, 0, 0, 0, 1 ,0, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
	{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ,0, 0, 1, 0, 1, 0, 0, 1, 1, 0 },
	{ 0, 0, 1, 1, 1, 0, 0, 0, 1, 1 ,0, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
	{ 0, 0, 1, 0, 0, 0, 0, 1, 1, 0 ,0, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
	{ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ,0, 0, 1, 0, 1, 1, 1, 1, 1, 0 },
	{ 0, 0, 0, 1, 1, 1, 1, 0, 1, 1 ,1, 1, 1, 0, 1, 1, 0, 1, 0, 0 },
	{ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

//给文件写入内容
void WriteFile(const char* fileName, char* map, int max_row, int max_col)
{
	// 1.打开文件
	ofstream ofs(fileName, ofstream::out);
	if (!ofs)
	{
		cerr << "write"<<fileName<< "error!" << endl;
		exit(1);
	}

	// 2.写入文件
	//写入二位数组行列数
	ofs.put(max_row);
	ofs.put(max_col);
	ofs.put('\n');
	//写入内容
	for (int i = 0; i < max_row; ++i)
	{
		for (int j = 0; j < max_col; ++j)
			ofs.put(map[i*max_col+j]);
		ofs.put('\n');
	}
	//关闭文件
	ofs.close();
}

void loadFile()
{
	//写入文件maze_1.txt中
	WriteFile(file[0], &mapArr_1[0][0], MAX_ROW_1, MAX_COL_1);
	//写入文件maze_2.txt中
	WriteFile(file[1], &mapArr_2[0][0], MAX_ROW_2, MAX_COL_2);
	//写入文件maze_2.txt中
	WriteFile(file[2], &mapArr_3[0][0], MAX_ROW_3, MAX_COL_3);
}
